{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateDate = void 0;\nvar _valueManagers = require(\"../internals/utils/valueManagers\");\n/**\n * Validation props used by the Date Picker, Date Field and Date Calendar components.\n */\n\n/**\n * Validation props as received by the validateDate method.\n */\n\n/**\n * Name of the props that should be defaulted before being passed to the validateDate method.\n */\n\nconst validateDate = ({\n  props,\n  value,\n  timezone,\n  adapter\n}) => {\n  if (value === null) {\n    return null;\n  }\n  const {\n    shouldDisableDate,\n    shouldDisableMonth,\n    shouldDisableYear,\n    disablePast,\n    disableFuture,\n    minDate,\n    maxDate\n  } = props;\n  const now = adapter.utils.date(undefined, timezone);\n  switch (true) {\n    case !adapter.utils.isValid(value):\n      return 'invalidDate';\n    case Boolean(shouldDisableDate && shouldDisableDate(value)):\n      return 'shouldDisableDate';\n    case Boolean(shouldDisableMonth && shouldDisableMonth(value)):\n      return 'shouldDisableMonth';\n    case Boolean(shouldDisableYear && shouldDisableYear(value)):\n      return 'shouldDisableYear';\n    case Boolean(disableFuture && adapter.utils.isAfterDay(value, now)):\n      return 'disableFuture';\n    case Boolean(disablePast && adapter.utils.isBeforeDay(value, now)):\n      return 'disablePast';\n    case Boolean(minDate && adapter.utils.isBeforeDay(value, minDate)):\n      return 'minDate';\n    case Boolean(maxDate && adapter.utils.isAfterDay(value, maxDate)):\n      return 'maxDate';\n    default:\n      return null;\n  }\n};\nexports.validateDate = validateDate;\nvalidateDate.valueManager = _valueManagers.singleItemValueManager;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateDate","_valueManagers","require","props","timezone","adapter","shouldDisableDate","shouldDisableMonth","shouldDisableYear","disablePast","disableFuture","minDate","maxDate","now","utils","date","undefined","isValid","Boolean","isAfterDay","isBeforeDay","valueManager","singleItemValueManager"],"sources":["F:/vehicle-rental-booking/frontend/node_modules/@mui/x-date-pickers/validation/validateDate.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateDate = void 0;\nvar _valueManagers = require(\"../internals/utils/valueManagers\");\n/**\n * Validation props used by the Date Picker, Date Field and Date Calendar components.\n */\n\n/**\n * Validation props as received by the validateDate method.\n */\n\n/**\n * Name of the props that should be defaulted before being passed to the validateDate method.\n */\n\nconst validateDate = ({\n  props,\n  value,\n  timezone,\n  adapter\n}) => {\n  if (value === null) {\n    return null;\n  }\n  const {\n    shouldDisableDate,\n    shouldDisableMonth,\n    shouldDisableYear,\n    disablePast,\n    disableFuture,\n    minDate,\n    maxDate\n  } = props;\n  const now = adapter.utils.date(undefined, timezone);\n  switch (true) {\n    case !adapter.utils.isValid(value):\n      return 'invalidDate';\n    case Boolean(shouldDisableDate && shouldDisableDate(value)):\n      return 'shouldDisableDate';\n    case Boolean(shouldDisableMonth && shouldDisableMonth(value)):\n      return 'shouldDisableMonth';\n    case Boolean(shouldDisableYear && shouldDisableYear(value)):\n      return 'shouldDisableYear';\n    case Boolean(disableFuture && adapter.utils.isAfterDay(value, now)):\n      return 'disableFuture';\n    case Boolean(disablePast && adapter.utils.isBeforeDay(value, now)):\n      return 'disablePast';\n    case Boolean(minDate && adapter.utils.isBeforeDay(value, minDate)):\n      return 'minDate';\n    case Boolean(maxDate && adapter.utils.isAfterDay(value, maxDate)):\n      return 'maxDate';\n    default:\n      return null;\n  }\n};\nexports.validateDate = validateDate;\nvalidateDate.valueManager = _valueManagers.singleItemValueManager;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIC,cAAc,GAAGC,OAAO,CAAC,kCAAkC,CAAC;AAChE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAMF,YAAY,GAAGA,CAAC;EACpBG,KAAK;EACLJ,KAAK;EACLK,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,IAAIN,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;EACb;EACA,MAAM;IACJO,iBAAiB;IACjBC,kBAAkB;IAClBC,iBAAiB;IACjBC,WAAW;IACXC,aAAa;IACbC,OAAO;IACPC;EACF,CAAC,GAAGT,KAAK;EACT,MAAMU,GAAG,GAAGR,OAAO,CAACS,KAAK,CAACC,IAAI,CAACC,SAAS,EAAEZ,QAAQ,CAAC;EACnD,QAAQ,IAAI;IACV,KAAK,CAACC,OAAO,CAACS,KAAK,CAACG,OAAO,CAAClB,KAAK,CAAC;MAChC,OAAO,aAAa;IACtB,KAAKmB,OAAO,CAACZ,iBAAiB,IAAIA,iBAAiB,CAACP,KAAK,CAAC,CAAC;MACzD,OAAO,mBAAmB;IAC5B,KAAKmB,OAAO,CAACX,kBAAkB,IAAIA,kBAAkB,CAACR,KAAK,CAAC,CAAC;MAC3D,OAAO,oBAAoB;IAC7B,KAAKmB,OAAO,CAACV,iBAAiB,IAAIA,iBAAiB,CAACT,KAAK,CAAC,CAAC;MACzD,OAAO,mBAAmB;IAC5B,KAAKmB,OAAO,CAACR,aAAa,IAAIL,OAAO,CAACS,KAAK,CAACK,UAAU,CAACpB,KAAK,EAAEc,GAAG,CAAC,CAAC;MACjE,OAAO,eAAe;IACxB,KAAKK,OAAO,CAACT,WAAW,IAAIJ,OAAO,CAACS,KAAK,CAACM,WAAW,CAACrB,KAAK,EAAEc,GAAG,CAAC,CAAC;MAChE,OAAO,aAAa;IACtB,KAAKK,OAAO,CAACP,OAAO,IAAIN,OAAO,CAACS,KAAK,CAACM,WAAW,CAACrB,KAAK,EAAEY,OAAO,CAAC,CAAC;MAChE,OAAO,SAAS;IAClB,KAAKO,OAAO,CAACN,OAAO,IAAIP,OAAO,CAACS,KAAK,CAACK,UAAU,CAACpB,KAAK,EAAEa,OAAO,CAAC,CAAC;MAC/D,OAAO,SAAS;IAClB;MACE,OAAO,IAAI;EACf;AACF,CAAC;AACDd,OAAO,CAACE,YAAY,GAAGA,YAAY;AACnCA,YAAY,CAACqB,YAAY,GAAGpB,cAAc,CAACqB,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}