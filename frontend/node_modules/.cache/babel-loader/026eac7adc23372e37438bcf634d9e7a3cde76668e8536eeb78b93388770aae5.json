{"ast":null,"code":"import * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nlet warnedOnceNotValidView = false;\nexport function useViews({\n  onChange,\n  onViewChange,\n  openTo,\n  view: inView,\n  views,\n  autoFocus,\n  focusedView: inFocusedView,\n  onFocusedViewChange\n}) {\n  var _views, _views2;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnceNotValidView) {\n      if (inView != null && !views.includes(inView)) {\n        console.warn(`MUI: \\`view=\"${inView}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n      if (inView == null && openTo != null && !views.includes(openTo)) {\n        console.warn(`MUI: \\`openTo=\"${openTo}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n    }\n  }\n  const defaultView = React.useRef(views.includes(openTo) ? openTo : views[0]);\n  const [view, setView] = useControlled({\n    name: 'useViews',\n    state: 'view',\n    controlled: inView,\n    default: defaultView.current\n  });\n  const defaultFocusedView = React.useRef(autoFocus ? view : null);\n  const [focusedView, setFocusedView] = useControlled({\n    name: 'useViews',\n    state: 'focusedView',\n    controlled: inFocusedView,\n    default: defaultFocusedView.current\n  });\n  const viewIndex = views.indexOf(view);\n  const previousView = (_views = views[viewIndex - 1]) != null ? _views : null;\n  const nextView = (_views2 = views[viewIndex + 1]) != null ? _views2 : null;\n  const handleChangeView = useEventCallback(newView => {\n    setView(newView);\n    if (onViewChange) {\n      onViewChange(newView);\n    }\n  });\n  const goToNextView = useEventCallback(() => {\n    if (nextView) {\n      handleChangeView(nextView);\n    }\n  });\n  const setValueAndGoToNextView = useEventCallback((value, currentViewSelectionState) => {\n    const isSelectionFinishedOnCurrentView = currentViewSelectionState === 'finish';\n    const globalSelectionState = isSelectionFinishedOnCurrentView && Boolean(nextView) ? 'partial' : currentViewSelectionState;\n    onChange(value, globalSelectionState);\n    if (isSelectionFinishedOnCurrentView) {\n      goToNextView();\n    }\n  });\n  const handleFocusedViewChange = useEventCallback((viewToFocus, hasFocus) => {\n    if (hasFocus) {\n      // Focus event\n      setFocusedView(viewToFocus);\n    } else {\n      // Blur event\n      setFocusedView(prevFocusedView => viewToFocus === prevFocusedView ? null : prevFocusedView // If false the blur is due to view swiching\n      );\n    }\n    onFocusedViewChange == null ? void 0 : onFocusedViewChange(viewToFocus, hasFocus);\n  });\n  return {\n    view,\n    setView: handleChangeView,\n    focusedView,\n    setFocusedView: handleFocusedViewChange,\n    nextView,\n    previousView,\n    defaultView: defaultView.current,\n    goToNextView,\n    setValueAndGoToNextView\n  };\n}","map":{"version":3,"names":["React","useEventCallback","unstable_useControlled","useControlled","warnedOnceNotValidView","useViews","onChange","onViewChange","openTo","view","inView","views","autoFocus","focusedView","inFocusedView","onFocusedViewChange","_views","_views2","process","env","NODE_ENV","includes","console","warn","join","defaultView","useRef","setView","name","state","controlled","default","current","defaultFocusedView","setFocusedView","viewIndex","indexOf","previousView","nextView","handleChangeView","newView","goToNextView","setValueAndGoToNextView","value","currentViewSelectionState","isSelectionFinishedOnCurrentView","globalSelectionState","Boolean","handleFocusedViewChange","viewToFocus","hasFocus","prevFocusedView"],"sources":["F:/vehicle-rental-booking/frontend/node_modules/@mui/x-date-pickers/internals/hooks/useViews.js"],"sourcesContent":["import * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nlet warnedOnceNotValidView = false;\nexport function useViews({\n  onChange,\n  onViewChange,\n  openTo,\n  view: inView,\n  views,\n  autoFocus,\n  focusedView: inFocusedView,\n  onFocusedViewChange\n}) {\n  var _views, _views2;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnceNotValidView) {\n      if (inView != null && !views.includes(inView)) {\n        console.warn(`MUI: \\`view=\"${inView}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n      if (inView == null && openTo != null && !views.includes(openTo)) {\n        console.warn(`MUI: \\`openTo=\"${openTo}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n    }\n  }\n  const defaultView = React.useRef(views.includes(openTo) ? openTo : views[0]);\n  const [view, setView] = useControlled({\n    name: 'useViews',\n    state: 'view',\n    controlled: inView,\n    default: defaultView.current\n  });\n  const defaultFocusedView = React.useRef(autoFocus ? view : null);\n  const [focusedView, setFocusedView] = useControlled({\n    name: 'useViews',\n    state: 'focusedView',\n    controlled: inFocusedView,\n    default: defaultFocusedView.current\n  });\n  const viewIndex = views.indexOf(view);\n  const previousView = (_views = views[viewIndex - 1]) != null ? _views : null;\n  const nextView = (_views2 = views[viewIndex + 1]) != null ? _views2 : null;\n  const handleChangeView = useEventCallback(newView => {\n    setView(newView);\n    if (onViewChange) {\n      onViewChange(newView);\n    }\n  });\n  const goToNextView = useEventCallback(() => {\n    if (nextView) {\n      handleChangeView(nextView);\n    }\n  });\n  const setValueAndGoToNextView = useEventCallback((value, currentViewSelectionState) => {\n    const isSelectionFinishedOnCurrentView = currentViewSelectionState === 'finish';\n    const globalSelectionState = isSelectionFinishedOnCurrentView && Boolean(nextView) ? 'partial' : currentViewSelectionState;\n    onChange(value, globalSelectionState);\n    if (isSelectionFinishedOnCurrentView) {\n      goToNextView();\n    }\n  });\n  const handleFocusedViewChange = useEventCallback((viewToFocus, hasFocus) => {\n    if (hasFocus) {\n      // Focus event\n      setFocusedView(viewToFocus);\n    } else {\n      // Blur event\n      setFocusedView(prevFocusedView => viewToFocus === prevFocusedView ? null : prevFocusedView // If false the blur is due to view swiching\n      );\n    }\n\n    onFocusedViewChange == null ? void 0 : onFocusedViewChange(viewToFocus, hasFocus);\n  });\n  return {\n    view,\n    setView: handleChangeView,\n    focusedView,\n    setFocusedView: handleFocusedViewChange,\n    nextView,\n    previousView,\n    defaultView: defaultView.current,\n    goToNextView,\n    setValueAndGoToNextView\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}