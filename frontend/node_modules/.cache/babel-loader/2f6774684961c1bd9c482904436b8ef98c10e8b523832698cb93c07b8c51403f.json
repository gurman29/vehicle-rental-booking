{"ast":null,"code":"var _jsxFileName = \"F:\\\\vehicle-rental-booking\\\\frontend\\\\src\\\\components\\\\VehicleTypeStep.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Typography, Box, Radio, RadioGroup, FormControlLabel, FormControl, CircularProgress, Alert, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VehicleTypeStep = ({\n  wheels,\n  value,\n  onChange,\n  onNext,\n  onBack\n}) => {\n  _s();\n  const [types, setTypes] = useState([]);\n  const [loading, setLoading] = useState(true); // Initialize loading to true\n  const [error, setError] = useState(null);\n  const [showContent, setShowContent] = useState(false); // New state to control content visibility\n\n  useEffect(() => {\n    const fetchTypes = async () => {\n      if (!wheels) {\n        setTypes([]);\n        setLoading(false); // Ensure loading is false when no wheels\n        setShowContent(true); // Show the initial message\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await axios.get(`/api/vehicle-types?wheels=${wheels}`);\n        setTypes(response.data);\n        setLoading(false);\n        setShowContent(true); // Show content after successful fetch\n      } catch (err) {\n        console.error('API Error:', err);\n        setError(`Failed to load ${wheels}-wheel vehicle types. Please try again.`);\n        setTypes([]);\n        setLoading(false);\n        setShowContent(true); // Show error message\n      }\n    };\n    fetchTypes();\n  }, [wheels]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value) {\n      onNext();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"Select Vehicle Type (\", wheels ? `${wheels}-wheel vehicles` : 'Please go back and select number of wheels first', \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this), showContent &&\n    /*#__PURE__*/\n    // Conditionally render the content based on showContent\n    _jsxDEV(FormControl, {\n      component: \"fieldset\",\n      fullWidth: true,\n      disabled: !wheels,\n      sx: {\n        mt: 2\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this) : types.length > 0 ? /*#__PURE__*/_jsxDEV(RadioGroup, {\n        name: \"vehicleType\",\n        value: value || '',\n        onChange: e => onChange(e.target.value),\n        children: types.map(type => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: type.id,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 46\n          }, this),\n          label: `${type.name}`\n        }, type.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: wheels ? `No ${wheels}-wheel vehicle types available` : 'Please go back and select number of wheels first'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: !value,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(VehicleTypeStep, \"kNbLySrOAgadfDeJPdA78Cyr3dI=\");\n_c = VehicleTypeStep;\nexport default VehicleTypeStep;\nvar _c;\n$RefreshReg$(_c, \"VehicleTypeStep\");","map":{"version":3,"names":["React","useEffect","useState","axios","Typography","Box","Radio","RadioGroup","FormControlLabel","FormControl","CircularProgress","Alert","Button","jsxDEV","_jsxDEV","VehicleTypeStep","wheels","value","onChange","onNext","onBack","_s","types","setTypes","loading","setLoading","error","setError","showContent","setShowContent","fetchTypes","response","get","data","err","console","handleSubmit","e","preventDefault","component","onSubmit","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","fullWidth","disabled","mt","display","justifyContent","length","name","target","map","type","id","control","label","color","onClick","_c","$RefreshReg$"],"sources":["F:/vehicle-rental-booking/frontend/src/components/VehicleTypeStep.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n    Typography,\n    Box,\n    Radio,\n    RadioGroup,\n    FormControlLabel,\n    FormControl,\n    CircularProgress,\n    Alert,\n    Button\n} from '@mui/material';\n\nconst VehicleTypeStep = ({ wheels, value, onChange, onNext, onBack }) => {\n    const [types, setTypes] = useState([]);\n    const [loading, setLoading] = useState(true); // Initialize loading to true\n    const [error, setError] = useState(null);\n    const [showContent, setShowContent] = useState(false); // New state to control content visibility\n\n    useEffect(() => {\n        const fetchTypes = async () => {\n            if (!wheels) {\n                setTypes([]);\n                setLoading(false); // Ensure loading is false when no wheels\n                setShowContent(true); // Show the initial message\n                return;\n            }\n\n            setLoading(true);\n            setError(null);\n\n            try {\n                const response = await axios.get(`/api/vehicle-types?wheels=${wheels}`);\n                setTypes(response.data);\n                setLoading(false);\n                setShowContent(true); // Show content after successful fetch\n            } catch (err) {\n                console.error('API Error:', err);\n                setError(`Failed to load ${wheels}-wheel vehicle types. Please try again.`);\n                setTypes([]);\n                setLoading(false);\n                setShowContent(true); // Show error message\n            }\n        };\n\n        fetchTypes();\n    }, [wheels]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (value) {\n            onNext();\n        }\n    };\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\n            <Typography variant=\"h5\" gutterBottom>\n                Select Vehicle Type ({wheels ? `${wheels}-wheel vehicles` : 'Please go back and select number of wheels first'})\n            </Typography>\n\n            {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n\n            {showContent && ( // Conditionally render the content based on showContent\n                <FormControl component=\"fieldset\" fullWidth disabled={!wheels} sx={{ mt: 2 }}>\n                    {loading ? (\n                        <Box display=\"flex\" justifyContent=\"center\">\n                            <CircularProgress />\n                        </Box>\n                    ) : types.length > 0 ? (\n                        <RadioGroup\n                            name=\"vehicleType\"\n                            value={value || ''}\n                            onChange={(e) => onChange(e.target.value)}\n                        >\n                            {types.map(type => (\n                                <FormControlLabel\n                                    key={type.id}\n                                    value={type.id}\n                                    control={<Radio />}\n                                    label={`${type.name}`}\n                                />\n                            ))}\n                        </RadioGroup>\n                    ) : (\n                        <Typography color=\"text.secondary\">\n                            {wheels ? `No ${wheels}-wheel vehicle types available` : 'Please go back and select number of wheels first'}\n                        </Typography>\n                    )}\n                </FormControl>\n            )}\n\n            <Box mt={4} display=\"flex\" justifyContent=\"space-between\">\n                <Button variant=\"outlined\" onClick={onBack}>\n                    Back\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    disabled={!value}\n                >\n                    Next\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nexport default VehicleTypeStep;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}